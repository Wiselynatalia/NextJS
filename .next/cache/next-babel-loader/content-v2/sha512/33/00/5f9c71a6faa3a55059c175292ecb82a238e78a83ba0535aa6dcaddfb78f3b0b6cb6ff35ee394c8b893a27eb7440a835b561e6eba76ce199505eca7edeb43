{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/wisely/Downloads/06-onwards-to-a-bigger-project-starting-project/pages/[meetupID].js\";\nimport { Fragment } from \"react/cjs/react.production.min\";\nimport MeetupDetail from \"../components/meetups/MeetupDetail\";\nimport { MongoClient } from \"mongodb\";\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 10\n  }, this);\n} //required when we use getStaticProps\n//returns an obj of the described dynamic segment values\n//tells nextJS which page needs to be pre-generated\n\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://admin:helloworld@cluster0.b6ump.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\"); //.find({*filter item*}, {*filter properties*:1 to set to true})\n\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  return {\n    fallback: false,\n    //Return 404 error if request doesnt meet paths defined\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupID: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  // fetch data for the meetup\n  //.meetupID can be replaced with dynamic page name ['xxx']\n  const meetupID = context.params.meetupID;\n  return {\n    props: {\n      meetupData: {\n        image: \"https://www.cnet.com/a/img/-YjNhPsseQEeBgJKJBB1fpbO800=/940x0/2021/05/20/b52f897c-3741-4a59-8fe3-cba1464eb596/gettyimages-562147745.jpg\",\n        address: \"Some address 5\",\n        id: meetupID,\n        title: \"First meetup\",\n        description: \"This is first meetup\"\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["/Users/wisely/Downloads/06-onwards-to-a-bigger-project-starting-project/pages/[meetupID].js"],"names":["Fragment","MeetupDetail","MongoClient","MeetupDetails","props","meetups","getStaticPaths","client","connect","db","meetupsCollection","collection","find","_id","toArray","fallback","paths","map","meetup","params","meetupID","toString","getStaticProps","context","meetupData","image","address","id","title","description"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,gCAAzB;AACA,OAAOC,YAAP,MAAyB,oCAAzB;AACA,SAASC,WAAT,QAA4B,SAA5B;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,sBAAO,QAAC,YAAD;AAAc,IAAA,OAAO,EAAEA,KAAK,CAACC;AAA7B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,C,CAED;AACA;AACA;;;AACA,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAML,WAAW,CAACM,OAAZ,CACnB,+FADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B,CALqC,CAOrC;;AACA,QAAMN,OAAO,GAAG,MAAMK,iBAAiB,CAACE,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB;AAEA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AACY;AACjBC,IAAAA,KAAK,EAAEX,OAAO,CAACY,GAAR,CAAaC,MAAD,KAAa;AAC9BC,MAAAA,MAAM,EAAE;AACNC,QAAAA,QAAQ,EAAEF,MAAM,CAACL,GAAP,CAAWQ,QAAX;AADJ;AADsB,KAAb,CAAZ;AAFF,GAAP;AAQD;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C;AACA;AACA,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AAEA,SAAO;AACLhB,IAAAA,KAAK,EAAE;AACLoB,MAAAA,UAAU,EAAE;AACVC,QAAAA,KAAK,EACH,yIAFQ;AAGVC,QAAAA,OAAO,EAAE,gBAHC;AAIVC,QAAAA,EAAE,EAAEP,QAJM;AAKVQ,QAAAA,KAAK,EAAE,cALG;AAMVC,QAAAA,WAAW,EAAE;AANH;AADP;AADF,GAAP;AAYD;AAED,eAAe1B,aAAf","sourcesContent":["import { Fragment } from \"react/cjs/react.production.min\";\nimport MeetupDetail from \"../components/meetups/MeetupDetail\";\nimport { MongoClient } from \"mongodb\";\n\nfunction MeetupDetails(props) {\n  return <MeetupDetail meetups={props.meetups} />;\n}\n\n//required when we use getStaticProps\n//returns an obj of the described dynamic segment values\n//tells nextJS which page needs to be pre-generated\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\n    \"mongodb+srv://admin:helloworld@cluster0.b6ump.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n\n  //.find({*filter item*}, {*filter properties*:1 to set to true})\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\n\n  return {\n    fallback: false, //Return 404 error if request doesnt meet paths defined\n    paths: meetups.map((meetup) => ({\n      params: {\n        meetupID: meetup._id.toString(),\n      },\n    })),\n  };\n}\n\nexport async function getStaticProps(context) {\n  // fetch data for the meetup\n  //.meetupID can be replaced with dynamic page name ['xxx']\n  const meetupID = context.params.meetupID;\n\n  return {\n    props: {\n      meetupData: {\n        image:\n          \"https://www.cnet.com/a/img/-YjNhPsseQEeBgJKJBB1fpbO800=/940x0/2021/05/20/b52f897c-3741-4a59-8fe3-cba1464eb596/gettyimages-562147745.jpg\",\n        address: \"Some address 5\",\n        id: meetupID,\n        title: \"First meetup\",\n        description: \"This is first meetup\",\n      },\n    },\n  };\n}\n\nexport default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}